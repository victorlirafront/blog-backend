services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: blog-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: blog_db
      MYSQL_USER: blog_user
      MYSQL_PASSWORD: blog_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: blog-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=blog_user
      - DB_PASSWORD=blog_password
      - DB_DATABASE=blog_db
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version (optional)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: blog-backend-dev
    restart: unless-stopped
    ports:
      - "3002:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=blog_user
      - DB_PASSWORD=blog_password
      - DB_DATABASE=blog_db
    volumes:
      - ./src:/app/src
      - ./dist:/app/dist
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blog-network
    profiles:
      - dev

volumes:
  mysql_data:
    driver: local

networks:
  blog-network:
    driver: bridge 